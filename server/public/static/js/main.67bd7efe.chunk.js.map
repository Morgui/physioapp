{"version":3,"sources":["services/auth.services.js","components/NavBar.js","components/auth/Login.js","components/auth/Signup.js","components/pages/Home.js","services/appointment.services.js","components/pages/Appointments/AppointmentForm.js","moment.locale.js","components/pages/Appointments/AppointmentCreated.js","components/pages/Admin/AdminIndex.js","components/pages/Admin/AppointmentList/appointmentCard.js","components/pages/Admin/AppointmentList/appointmentTableRow.js","components/pages/Admin/AdminMenu.js","components/pages/Admin/AppointmentList/AppointmentList.js","services/patient.services.js","components/pages/Admin/Patients/patientTable.js","components/pages/Admin/Patients/PatientList.js","components/pages/Admin/Patients/PatientDetails.js","components/pages/Admin/Patients/PatientEdit.js","App.js","index.js"],"names":["Services","signup","username","password","service","post","then","response","data","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","Navigation","props","authServices","setState","setTheUser","catch","err","console","log","state","AuthServices","greeting","loggedInUser","Navbar","className","expand","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","as","to","onClick","Component","Login","handleChange","e","target","name","value","postUser","authService","theLoggedUser","history","push","handleSubmit","preventDefault","Container","Row","Col","md","Form","onSubmit","Group","Label","Control","type","onChange","Button","variant","Signup","theLoggedNewUser","Home","sm","span","Image","src","alt","fluid","offset","size","getAllAppointments","getAppointmentDetails","createAppointment","appointment","getAppointmentByReference","reference","getFreeHoursByDate","date","updateAppointmentStatus","status","getOlderAppointments","AppointmentForm","onDateChange","appointmentService","results","availableHours","result","createdAppointment","handleClose","showForm","handleShow","AppointmenService","surname","email","motive","rounded","Modal","show","onHide","Header","closeButton","Title","Body","time","required","map","elm","key","moment","monthsShortDot","split","monthsShort","defineLocale","months","m","format","test","month","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","hours","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","mm","h","hh","d","dd","M","MM","y","yy","ordinalParse","ordinal","week","dow","doy","factory","AppointmentCreated","componentDidMount","dateParse","locale","match","params","AppointmentService","AdminIndex","Card","Img","AppointmentCard","lg","Text","patientId","AppointmentTableRow","confirmAppointment","_id","cancelAppointment","statusButton","AdminMenu","AppointmentList","getAppointments","appointments","isSameDay","date1","date2","getMonth","getFullYear","getDate","isFutureDate","futureDate","getAppointmentsDay","day","year","dayToFilter","Date","filter","parse","getFutureAppointments","today","length","Table","striped","bordered","hover","getAllPatients","getPatientDetails","updatePatient","patient","put","PatientTable","PatientList","getPatients","patientService","patients","searchBar","PatientService","placeholder","toLowerCase","includes","PatientDetails","getPatientDetail","appoinmentService","appoinments","age","genre","antecedents","PatientEdit","App","componentDidUpdate","prevProps","prevState","fetchUser","userObj","theUser","NavBar","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.67bd7efe.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signup = ({ username, password }) => this.service.post('/signup', { username, password }).then(response => response.data)\n    login = ({ username, password }) => this.service.post('/login', { username, password }).then(response => response.data)\n    logout = () => this.service.post('/logout').then(response => response.data)\n    loggedin = () => this.service.get('/loggedin').then(response => response.data)\n}","import React, { Component } from 'react';\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nimport AuthServices from '../services/auth.services'\n\nimport { Link } from 'react-router-dom'\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.authServices = new AuthServices()\n    }\n\n    logout = () => {\n        this.authServices.logout()\n            .then(response => {\n                this.setState({ username: '', password: '' })\n                this.props.setTheUser(false)\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n        const greeting = this.props.loggedInUser ? <>Hi, {this.props.loggedInUser.username}!</> : <> </>\n\n        return (\n\n            <Navbar className=\"navbar\" expand=\"lg\" bg=\"light\">\n                <Navbar.Brand href=\"/\">PhysioApp</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        <Nav.Link as=\"div\"> <Link to=\"/\">Inicio</Link></Nav.Link>\n                        <Nav.Link as=\"div\"> <Link to=\"/appointment\">Cita Online</Link></Nav.Link>\n                        {this.props.loggedInUser ?\n                            <>\n                                <Nav.Link onClick={this.logout}>Cerrar Sesión</Nav.Link>\n                                <Nav.Link as=\"div\"><Link to=\"/admin\">{greeting}</Link></Nav.Link>\n                            </>\n                            :\n                            <>\n                                <Nav.Link as=\"div\"> <Link to=\"/signup\">SignUp</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/login\">LogIn</Link></Nav.Link>\n                            </>}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n\n        )\n    }\n}\n\nexport default Navigation","import React, { Component } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nimport AuthServices from '../../services/auth.services'\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: ''\n        }\n        this.authService = new AuthServices()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    postUser = () => {\n        this.authService.login(this.state)\n            .then(theLoggedUser => {\n                this.setState({ username: '', password: '' })\n                this.props.setTheUser(theLoggedUser)\n                this.props.history.push('/admin')\n            })\n            .catch(err => console.log({ err }))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n    }\n\n    render() {\n\n        return (\n\n            <Container className=\"auth-div\">\n\n                <h1>Log In</h1>\n                <Row className=\"justify-content-md-center\">\n                    <Col md={4}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Group>\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                            </Form.Group>\n\n                            <Button variant=\"info\" type=\"submit\">Log In</Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n\n        )\n    }\n}\n\nexport default Login","import React, { Component } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nimport AuthServices from '../../services/auth.services'\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: ''\n        }\n        this.authService = new AuthServices()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    postUser = () => {\n        this.authService.signup(this.state)\n            .then(theLoggedNewUser => {\n                this.setState({ username: '', password: '' })\n                this.props.setTheUser(theLoggedNewUser)\n                this.props.history.push('/')\n            })\n            .catch(err => console.log({ err }))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n    }\n\n    render() {\n\n        return (\n\n            <Container className=\"auth-div\">\n\n                <h1>Sign Up</h1>\n                <Row className=\"justify-content-md-center\">\n                    <Col md={4}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Group>\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                            </Form.Group>\n\n                            <Button variant=\"info\" type=\"submit\">Sign Up</Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n\n        )\n    }\n}\n\nexport default Signup","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\n\n\nclass Home extends Component {\n\n    render() {\n        return (\n            <Container>\n                <Row className=\"justify-content-md-center margin\">\n                    <h1 className=\"textIndex\">Profesional experto en salud y bienestar</h1>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col sm={{ span: 4 }}>\n                        <Image src=\"/images/fisio1.jpg\" alt=\"imagen home\" fluid />\n                    </Col>\n                    <Col>\n                        <p>Ofrecemos un trato personalizado que busca una mejoría duradera en la mayor brevedad posible. Trabajamos vocacionalmente y nos encanta verle satisfecho, ese es nuestro mejor premio.\n                        No dude en pedir su cita online y seguro que no se arrepentirá. Nuestra combinación de experiencia, profesionalidad, vocación y atención al cliente es inmejorable.</p>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-end\">\n                    <Col md={{ span: 4, offset: 4 }}>\n                        <Button variant=\"outline-info\" size=\"sm\">\n                            <Link to='#'>Nuestros servicios</Link>\n                        </Button>\n                        <Button variant=\"outline-info\" size=\"sm\">\n                            <Link to='/appointment'>Pide tu Cita</Link>\n                        </Button>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\nexport default Home","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}`,\n            withCredentials: true\n        })\n    }\n\n    getAllAppointments = () => this.service.get('/appointment').then(response => response.data)\n    getAppointmentDetails = id => this.service.get(`/appointment/${id}`).then(response => response.data)\n    createAppointment = appointment => this.service.post('/appointment', appointment).then(response => response.data)\n    getAppointmentByReference = reference => this.service.get(`/appointment/${reference}`).then(response => response.data)\n    getFreeHoursByDate = (date) => this.service.post('/appointment/available-hours', { date }).then(response => response.data)\n    updateAppointmentStatus = (id, status) => this.service.post(`/appointment/${id}/update-state`, { status }).then(response => response.data)\n    getOlderAppointments = (id) => this.service.get(`/appointment/?patientId=${id}`).then(response => response.data)\n}","import React, { Component } from 'react'\nimport './AppointmentForm.css'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\n\nimport AppointmenService from '../../../services/appointment.services'\n\n\nclass AppointmentForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.appointmentService = new AppointmenService()\n        this.state = {\n            appointment: {\n                name: '',\n                surname: '',\n                email: '',\n                date: '',\n                motive: ''\n            },\n            showForm: false,\n            createdAppointment: null,\n            availableHours: []\n        }\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            appointment: { ...this.state.appointment, [name]: value }\n        })\n    }\n\n    onDateChange = e => {\n        let { name, value } = e.target\n        this.appointmentService.getFreeHoursByDate(value)\n            .then(results => {\n                this.setState({\n                    appointment: { ...this.state.appointment, [name]: value },\n                    availableHours: results\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    createAppointment = (data) => {\n        return this.appointmentService.createAppointment(data)\n            .then(result => {\n                this.setState({ createdAppointment: result.data })\n                return result\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.createAppointment(this.state.appointment)\n            .then(appointment => {\n                console.log(\"vuelve del service\")\n                this.props.history.push(`/appointment/created/${appointment.data.reference}`)\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleClose = () => this.setState({ showForm: false })\n    handleShow = () => this.setState({ showForm: true })\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row className=\"justify-content-md-center\">\n                        <h1 className=\"margin\">Pide tu cita</h1>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col sm={{ span: 4 }}>\n                            <Image src=\"/images/img_cita.jpeg\" alt=\"imagen cita\" rounded />\n                        </Col>\n                        <Col>\n                            <p>Ofrecemos un trato personalizado que busca una mejoría duradera en la mayor brevedad posible. Trabajamos vocacionalmente y nos encanta verle satisfecho, ese es nuestro mejor premio.\n                        No dude en pedir su cita online y seguro que no se arrepentirá. Nuestra combinación de experiencia, profesionalidad, vocación y atención al cliente es inmejorable.</p>\n                        </Col>\n\n                    </Row>\n                    <Row className=\"justify-content-md-center margin\">\n                        <Col sm={{ span: 5, offset: 4 }}>\n                            <Button variant=\"success\" onClick={this.handleShow}>Pedir Cita</Button>\n                            <Modal show={this.state.showForm} onHide={this.handleClose}>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>Solicitar Cita</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>\n                                    <Form onSubmit={this.handleSubmit}>\n                                        <Form.Group>\n                                            <Form.Label>Nombre</Form.Label>\n                                            <Form.Control type=\"text\" name=\"name\" value={this.state.appointment.name} onChange={this.handleChange} />\n                                        </Form.Group>\n                                        <Form.Group>\n                                            <Form.Label>Apellidos</Form.Label>\n                                            <Form.Control type=\"text\" name=\"surname\" value={this.state.appointment.surname} onChange={this.handleChange} />\n                                        </Form.Group>\n                                        <Form.Group>\n                                            <Form.Label>Email</Form.Label>\n                                            <Form.Control type=\"email\" name=\"email\" value={this.state.appointment.email} onChange={this.handleChange} />\n                                        </Form.Group>\n                                        <Form.Group>\n                                            <Form.Label>Fecha</Form.Label>\n                                            <Form.Control type=\"date\" name=\"date\" value={this.state.appointment.date} onChange={this.onDateChange} />\n                                        </Form.Group>\n                                        <Form.Group>\n                                            <Form.Label>Hora</Form.Label>\n                                            <select name=\"time\" value={this.state.appointment.time} onChange={this.handleChange} className=\"form-control\" required>\n                                                <option value=\"\">---</option>\n                                                {this.state.availableHours.map(elm => <option value={elm} key={elm}>{elm}</option>)}\n                                            </select>\n                                        </Form.Group>\n                                        <Form.Group>\n                                            <Form.Label>Motivo de la consulta</Form.Label>\n                                            <Form.Control type=\"text\" name=\"motive\" value={this.state.appointment.motive} onChange={this.handleChange} />\n                                        </Form.Group>\n                                        <Button variant=\"info\" type=\"submit\">Solicitar cita</Button>\n                                    </Form>\n                                </Modal.Body>\n                            </Modal>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default AppointmentForm","// moment.js locale configuration\n// locale : spanish (es)\nimport moment from 'moment';\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n    return moment.defineLocale('es', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort: function (m, format) {\n            if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'Do_Lu_Ma_Mi_Ju_Vi_Sá'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'LT:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY LT',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY LT'\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años'\n        },\n        ordinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport moment from 'moment';\nimport '../../../moment.locale'\n\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport AppointmentService from '../../../services/appointment.services'\n\n\nclass AppointmentCreated extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            reference: props.match.params.reference,\n            appointment: {}\n        }\n        this.appointmentService = new AppointmentService()\n    }\n\n    componentDidMount = () => this.getAppointmentByReference(this.state.reference)\n\n    getAppointmentByReference = (reference) => {\n        this.appointmentService.getAppointmentByReference(reference)\n            .then(result => {\n                console.log(result)\n                result ? this.setState({ appointment: result }) : this.props.history.push(\"/appointment\")\n\n            }).catch(err => console.log(err))\n    }\n\n    dateParse = (date, format) => {\n        moment.locale('es')\n        return moment(date).format(format)\n    }\n\n\n    render() {\n        return (\n            <Container>\n                <Row className=\"justify-content-md-center margin\">\n                    <h3>Su cita para el día {this.dateParse(this.state.appointment.date, \"LL\")} a las {this.dateParse(this.state.appointment.date, \"LT\")} ha sido creada y se encuentra pendiente de confirmación</h3>\n                </Row>\n                <Row>\n                    <Col>\n                        <p>Su nº de referencia asignado es: <strong>{this.state.reference}</strong>. En breve recibirá un email confirmándole la cita o nos pondremos en contacto con usted si fuese necesario.</p>\n                        <Button variant=\"outline-info\" size=\"sm\">\n                            <Link to='/'>Volver</Link>\n                        </Button>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default AppointmentCreated;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './Admin.css'\n\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\n\n\nclass AdminIndex extends Component {\n\n    render() {\n        return (\n            <Container>\n                <Row className=\"d-flex justify-content-center margin\">\n                    <Col md={4}>\n                        <Card className=\"card-admin\">\n                            <Card.Body>\n                                <Card.Img variant=\"top\" src=\"/images/appointments.png\" alt=\"imagen citas\" />\n                                <hr></hr>\n                                <Button variant=\"outline-info\" size=\"sm\">\n                                    <Link to=\"/admin/appointments\">Citas</Link>\n                                </Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={4}>\n                        <Card className=\"card-admin\">\n                            <Card.Body>\n                                <Card.Img variant=\"top\" src=\"/images/patients2.jpeg\" alt=\"listado pacientes\" />\n                                <hr></hr>\n                                <Button variant=\"outline-info\" size=\"sm\">\n                                    <Link to=\"/admin/patients\">Pacientes</Link>\n                                </Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n}\n\nexport default AdminIndex","import React, { Component } from 'react'\n\nimport './appointmentCard.css'\n\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\n\nimport moment from 'moment';\nimport '../../../../moment.locale'\n\nclass AppointmentCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            appointment: props.appointment\n        }\n    }\n\n    dateParse = (date, format) => {\n        moment.locale('es')\n        return moment(date).format(format)\n    }\n    render() {\n        return (\n            <>\n                <Col sm={6} md={3} lg={3}>\n                    <Card className=\"card-appointment\">\n                        <Card.Body>\n                            <Card.Text>{this.state.appointment.patientId.name} {this.state.appointment.patientId.surname}</Card.Text>\n                            <hr></hr>\n                            <Card.Text>{this.dateParse(this.state.appointment.date, \"L\")}</Card.Text>\n                            <Card.Text>{this.dateParse(this.state.appointment.date, \"LT\")} </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </>\n        )\n    }\n\n}\n\n\nexport default AppointmentCard","import React, { Component } from 'react'\n\nimport moment from 'moment';\nimport Button from 'react-bootstrap/Button'\nimport AppointmentService from '../../../../services/appointment.services'\n\nimport '../../../../moment.locale'\n\nclass AppointmentTableRow extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            appointment: props.appointment\n        }\n        this.appointmentService = new AppointmentService()\n    }\n\n    dateParse = (date, format) => {\n        moment.locale('es')\n        return moment(date).format(format)\n    }\n\n    updateAppointmentStatus = (id, status) => {\n        return this.appointmentService.updateAppointmentStatus(id, status)\n            .then(results => {\n                this.setState({ appointment: { ...this.state.appointment, status } })\n            })\n            .catch(err => console.log(err))\n    }\n\n    confirmAppointment = (e) => this.updateAppointmentStatus(this.state.appointment._id, 'accepted')\n    cancelAppointment = (e) => this.updateAppointmentStatus(this.state.appointment._id, 'cancelled')\n\n    statusButton = (appointment) => {\n        if (appointment.status === 'pending') {\n            return <Button size=\"sm\" variant=\"success\" onClick={this.confirmAppointment}>Confirmar</Button>\n        } else if (appointment.status === 'accepted') {\n            return <Button size=\"sm\" variant=\"danger\" onClick={this.cancelAppointment}>Cancelar</Button>\n        } else if (appointment.status === 'cancelled') {\n            return <span>Cita cancelada</span>\n        } else {\n            return ''\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <tr>\n                    <td>{this.state.appointment.patientId.name} {this.state.appointment.patientId.surname}</td>\n                    <td>{this.dateParse(this.state.appointment.date, \"L\")}</td>\n                    <td>{this.dateParse(this.state.appointment.date, \"LT\")}</td>\n                    <td>{this.statusButton(this.state.appointment)}</td>\n                </tr>\n            </>\n        )\n    }\n\n}\n\n\nexport default AppointmentTableRow","import React, { Component } from 'react'\n\nimport Col from 'react-bootstrap/Col'\nimport { Link } from 'react-router-dom'\n\nimport './Admin.css'\n\nclass AdminMenu extends Component {\n\n\n    render() {\n        return (\n            <Col sm={1} className=\"menu\" >\n                <ul>\n                    <li><Link to=\"/admin/appointments\">Citas</Link></li>\n                    <li><Link to=\"/admin/patients\">Pacientes</Link></li>\n                </ul>\n            </Col>\n        )\n    }\n\n}\n\nexport default AdminMenu","import React, { Component } from 'react'\n\nimport AppointmentService from '../../../../services/appointment.services'\nimport AppointmentCard from './appointmentCard'\n\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport { Link } from 'react-router-dom'\n\nimport AppointmentTableRow from './appointmentTableRow'\nimport AdminMenu from '../AdminMenu'\n\nclass AppointmentList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            appointments: []\n        }\n        this.appointmentService = new AppointmentService()\n    }\n\n    componentDidMount = () => this.getAppointments()\n\n    getAppointments = () => {\n        return this.appointmentService.getAllAppointments()\n            .then(results => {\n                this.setState({ appointments: results })\n                console.log(results)\n            })\n            .catch(err => console.log(err))\n    }\n\n    //comparar si 2 fechas son el mismo día\n    isSameDay = (date1, date2) => (date1.getMonth() === date2.getMonth()) && (date1.getFullYear() === date2.getFullYear()) && (date1.getDate() === date2.getDate())\n\n    //comparar si futureDate es posterior a date\n    isFutureDate = (date, futureDate) => (futureDate.getMonth() > date.getMonth()) || (futureDate.getFullYear() > date.getFullYear()) || (futureDate.getDate() > date.getDate())\n\n    getAppointmentsDay = (day, month, year) => {\n        //Filtra la lista de citas \n        let dayToFilter = new Date(year, month, day)\n        return this.state.appointments.filter(appointment => {\n            let date = new Date(Date.parse(appointment.date))\n            return this.isSameDay(dayToFilter, date)\n        })\n    }\n\n    getFutureAppointments = (day) => {\n        // Filtra la lista de citas dejando solo las de fechas superiores al today por parametro\n        return this.state.appointments.filter(appointment => {\n            let date = new Date(Date.parse(appointment.date))\n            return this.isFutureDate(day, date)\n        })\n    }\n\n\n    render() {\n        const today = new Date()\n\n        return (\n            <Container fluid>\n                <Row className=\"margin\">\n                    <AdminMenu />\n                    <Col sm={9}>\n                        <h4>Citas de HOY</h4>\n                        <hr />\n                        <Row>\n                            {this.getAppointmentsDay(today.getDate(), today.getMonth(), today.getFullYear()).length > 0 ? this.getAppointmentsDay(today.getDate(), today.getMonth(), today.getFullYear()).map(elm => <AppointmentCard key={elm._id} appointment={elm} />) : <p>No hay citas</p>}\n                        </Row>\n                        <h5>Próximas Citas</h5>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Nombre</th>\n                                    <th>Fecha</th>\n                                    <th>Hora</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.getFutureAppointments(today).map(elm => <AppointmentTableRow key={elm._id} appointment={elm} />)}\n                            </tbody>\n                        </Table>\n                        <br />\n                        <Button variant=\"outline-info\" size=\"sm\">\n                            <Link to='/admin'>Volver</Link>\n                        </Button>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n}\n\nexport default AppointmentList","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}`,\n            withCredentials: true\n        })\n    }\n\n    getAllPatients = () => this.service.get('/patients').then(response => response.data)\n    getPatientDetails = id => this.service.get(`/patients/${id}`).then(response => response.data)\n    updatePatient = (id, patient) => this.service.put(`/patients/${id}`, patient).then(response => response.data)\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass PatientTable extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            patient: props.patient\n        }\n    }\n\n    render() {\n        return (\n            <tr>\n                <td><Link to={`/admin/patients/${this.state.patient._id}`}>{this.state.patient.name} {this.state.patient.surname}</Link></td>\n                <td>{this.state.patient.email}</td>\n            </tr>\n\n        )\n    }\n\n}\n\n\nexport default PatientTable","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport PatientService from '../../../../services/patient.services'\nimport PatientTable from './patientTable'\n\nimport AdminMenu from '../AdminMenu'\nimport './searchBar.css'\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\n\n\nclass PatientList extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            patients: [],\n            searchBar: ''\n        }\n        this.patientService = new PatientService()\n    }\n\n    componentDidMount = () => this.getPatients()\n\n    getPatients = () => {\n        return this.patientService.getAllPatients()\n            .then(results => {\n                console.log(results)\n                this.setState({ patients: results })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    handleChange = e => this.setState({ searchBar: e.target.value })\n\n    render() {\n        return (\n            <Container>\n                <Row className=\"margin\">\n                    <AdminMenu />\n                    <Col sm={8}>\n                        <h3>Pacientes</h3>\n                        <hr />\n                        <Form>\n                            <Form.Group >\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"input\"\n                                    placeholder=\"Search...\"\n                                    value={this.state.searchBar}\n                                    onChange={this.handleChange}\n                                    className=\"search-bar\"\n                                />\n                                <i className=\"fas fa-search\"></i>\n                            </Form.Group>\n                        </Form>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Nombre Completo</th>\n                                    <th>Email</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.patients.filter(elm => `${elm.name} ${elm.surname} ${elm.email}`.toLowerCase().includes(this.state.searchBar.toLowerCase())).map(elm => <PatientTable key={elm._id} patient={elm} />)}\n                            </tbody>\n                        </Table>\n                        <Button variant=\"outline-info\" size=\"sm\">\n                            <Link to='/admin'>Volver</Link>\n                        </Button>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n}\n\nexport default PatientList","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport PatientService from '../../../../services/patient.services'\nimport AppointmentService from '../../../../services/appointment.services'\n\nimport Button from 'react-bootstrap/Button'\n\nclass PatientDetails extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            patientId: props.match.params.id,\n            patient: {\n                name: '',\n                surname: '',\n                email: '',\n                age: '',\n                genre: '',\n                antecedents: ''\n            },\n            appoinments: [\n            ]\n        }\n        this.patientService = new PatientService()\n        this.appoinmentService = new AppointmentService()\n    }\n\n    componentDidMount = () => {\n        this.getPatientDetail(this.state.patientId)\n        this.getOlderAppointments(this.state.patientId)\n    }\n\n    getPatientDetail = (id) => {\n        return this.patientService.getPatientDetails(id)\n            .then(patient => {\n                this.setState({ patient })\n            })\n            .catch(err => console.log(err))\n    }\n\n    getOlderAppointments = (id) => {\n        return this.appoinmentService.getOlderAppointments(id)\n            .then(appoinments => {\n                this.setState({ appoinments })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Historial</h1>\n                <p><Link to={`/admin/patients/${this.state.patient._id}/edit`}>Editar</Link></p>\n                <h5>Nombre Completo</h5>\n                <p>{this.state.patient.name} {this.state.patient.surname}</p>\n                <h5>Datos de Contacto</h5>\n                <p>{this.state.patient.email}</p>\n                <h5>Edad</h5>\n                <h5>Sexo</h5>\n                <h5>Motivos de la consulta</h5>\n\n                <ul>\n                    {this.state.appoinments.map(appointment => <li>{appointment.motive} - {appointment.date}</li>)}\n                </ul>\n\n                <h5>Antecedentes</h5>\n                <p>Antecedentes: se recogen aquí tanto los antecedentes personales (lesiones pasadas, operaciones, tratamientos en curso…) como familiares</p>\n\n                <br />\n                <Button variant=\"outline-info\" size=\"sm\">\n                    <Link to='/admin/patients'>Volver</Link>\n                </Button>\n            </>\n        )\n    }\n}\nexport default PatientDetails","import React, { Component } from 'react'\n\nimport PatientService from '../../../../services/patient.services'\n\nclass PatientEdit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            patientId: props.match.params.id,\n            patient: {\n                name: '',\n                surname: '',\n                email: '',\n                age: '',\n                genre: '',\n                antecedents: ''\n            }\n        }\n        this.patientService = new PatientService()\n    }\n\n\n    render() {\n        return (\n\n            <h1>Prueba</h1>\n        )\n    }\n}\n\nexport default PatientEdit","import React, { Component } from 'react';\n\n/* ---- STYLES ---- */\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n/* ---- RRD COMPONENTS ---- */\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\n/* ---- SERVICES ---- */\nimport AuthServices from './services/auth.services'\n\n/* ---- UI COMPONENTS ---- */\nimport NavBar from './components/NavBar'\nimport Login from './components/auth/Login'\nimport Signup from './components/auth/Signup'\n\n/* ---- PAGES COMPONENTS ---- */\nimport Home from './components/pages/Home'\nimport AppointmentForm from './components/pages/Appointments/AppointmentForm'\nimport AppointmentCreated from './components/pages/Appointments/AppointmentCreated'\nimport AdminIndex from './components/pages/Admin/AdminIndex'\nimport AppointmentList from './components/pages/Admin/AppointmentList/AppointmentList'\nimport PatientList from './components/pages/Admin/Patients/PatientList'\nimport PatientDetails from './components/pages/Admin/Patients/PatientDetails'\nimport PatientEdit from './components/pages/Admin/Patients/PatientEdit'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = { loggedInUser: false }\n    this.authServices = new AuthServices()\n  }\n\n  componentDidUpdate = (prevProps, prevState) => console.log(\"El estado de App se ha actualizado:\", this.state)\n  componentDidMount = () => this.fetchUser()\n\n  setTheUser = userObj => this.setState({ loggedInUser: userObj })\n  fetchUser = () => {\n    this.authServices.loggedin()\n      .then(theUser => this.setState({ loggedInUser: theUser }))\n      .catch(() => this.setState({ loggedInUser: false }))\n  }\n\n  render() {\n\n    return (\n      < div className=\"bg\">\n        <NavBar setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home />} />\n          <Route exact path=\"/appointment\" render={match => <AppointmentForm {...match} />} />\n          <Route path=\"/appointment/created/:reference\" render={match => <AppointmentCreated {...match} />} />\n          <Route path=\"/signup\" render={() => <Signup setTheUser={this.setTheUser} />} />\n          <Route path=\"/login\" render={match => <Login setTheUser={this.setTheUser} {...match} />} />\n          {this.state.loggedInUser ? (\n            <>\n              <Route exact path=\"/admin\" render={() => <AdminIndex loggedInUser={this.state.loggedInUser} />} />\n              <Route path=\"/admin/appointments\" render={() => <AppointmentList />} />\n              <Route exact path=\"/admin/patients\" render={() => <PatientList />} />\n              <Route exact path=\"/admin/patients/:id/edit\" render={match => <PatientEdit {...match} />} />\n              <Route exact path=\"/admin/patients/:id\" render={match => <PatientDetails {...match} />} />\n            </>\n          ) : (\n              <Redirect to=\"/\" />\n            )}\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render((\n    <Router>\n        <App />\n    </Router>\n), document.getElementById('root'));"],"sourceRoot":""}